name: ci

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

permissions:
  contents: read

# Cancel in progress workflows
# in the scenario where we already had a run going for that PR/branch/tag but then triggered a new run
concurrency:
  group: "${{ github.workflow }} legacy âœ¨ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}"
  cancel-in-progress: true

jobs:
  
  test:
    runs-on: ubuntu-latest
    container: ubuntu:20.04
    strategy:
      fail-fast: false
      matrix:
        name:
          - Node.js 0.6
        include:
          - name: Node.js 0.6
            node-version: "0.6"
            npm-i: mocha@1.21.5
            npm-rm: nyc

    steps:
    - name: Setup container environment
      run: |
        apt-get update
        apt-get -y install sudo python3 git g++ curl tar unzip make libssl-dev
    - uses: actions/checkout@v4

    - name: Install Node.js ${{ matrix.node-version }}
      shell: bash -eo pipefail -l {0}
      run: |
        sudo sh -c 'echo "deb http://us.archive.ubuntu.com/ubuntu/ bionic universe" >> /etc/apt/sources.list'
        sudo sh -c 'echo "deb http://security.ubuntu.com/ubuntu bionic-security main" >> /etc/apt/sources.list'        
        sudo apt-get update
        sudo apt-get -y install g++-4.8 gcc-4.8 libssl1.0-dev python2 python-is-python2 jq
        export CC=/usr/bin/gcc-4.8
        export CXX=/usr/bin/g++-4.8
        openssl version
        export NVM_DIR="/etc/skel/.nvm"
        mkdir $NVM_DIR
        nvm_version=$(curl -fsSL https://api.github.com/repos/nvm-sh/nvm/releases/latest | jq -r '.tag_name')
        curl -fsSL https://raw.githubusercontent.com/nvm-sh/nvm/$nvm_version/install.sh | bash

        echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm' | tee -a /etc/skel/.bash_profile
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"

        nvm install --default 0.6

        if [[ "${{ matrix.node-version }}" == 0.* && "$(cut -d. -f2 <<< "${{ matrix.node-version }}")" -lt 10 ]]; then
          nvm install --alias=npm 0.10
          nvm use 0.6
          if [[ "$(npm -v)" == 1.1.* ]]; then
            nvm exec npm npm install -g npm@1.1
            ln -fs "$(which npm)" "$(dirname "$(nvm which npm)")/npm"
          else
            sed -i '1s;^.*$;'"$(printf '#!%q' "$(nvm which npm)")"';' "$(readlink -f "$(which npm)")"
          fi
          npm config set strict-ssl false
        fi
        dirname "$(nvm which ${{ matrix.node-version }})" >> "$GITHUB_PATH"

    - name: Configure npm
      run: |
        if [[ "$(npm config get package-lock)" == "true" ]]; then
          npm config set package-lock false
        else
          npm config set shrinkwrap false
        fi

    - name: Remove non-test npm modules
      run: |
        echo csv-parse got stream-to-array | \
          xargs -n1 npm rm --silent --save-dev

    - name: Remove npm module(s) ${{ matrix.npm-rm }}
      run: npm rm --silent --save-dev ${{ matrix.npm-rm }}
      if: matrix.npm-rm != ''

    - name: Install npm module(s) ${{ matrix.npm-i }}
      run: npm install --save-dev ${{ matrix.npm-i }}
      if: matrix.npm-i != ''

    - name: Setup Node.js version-specific dependencies
      shell: bash
      run: |
        # eslint for linting
        # - remove on Node.js < 10
        if [[ "$(cut -d. -f1 <<< "${{ matrix.node-version }}")" -lt 10 ]]; then
          node -pe 'Object.keys(require("./package").devDependencies).join("\n")' | \
            grep -E '^eslint(-|$)' | \
            sort -r | \
            xargs -n1 npm rm --silent --save-dev
        fi

    - name: Install Node.js dependencies
      run: npm install

    - name: List environment
      id: list_env
      shell: bash
      run: |
        echo "node@$(node -v)"
        echo "npm@$(npm -v)"
        npm -s ls ||:
        (npm -s ls --depth=0 ||:) | awk -F'[ @]' 'NR>1 && $2 { print "::set-output name=" $2 "::" $3 }'

    - name: Run tests
      shell: bash
      run: |
        if npm -ps ls nyc | grep -q nyc; then
          npm run test-ci
        else
          npm test
        fi

    - name: Upload code coverage
      if: steps.list_env.outputs.nyc != ''
      uses: actions/upload-artifact@v4
      with:
        name: coverage-node-${{ matrix.node-version }}
        path: ./coverage/lcov.info
        retention-days: 1

  coverage:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
    steps:
    - uses: actions/checkout@v4

    - name: Install lcov
      shell: bash
      run: sudo apt-get -y install lcov

    - name: Collect coverage reports
      uses: actions/download-artifact@v4
      with:
        path: ./coverage
        pattern: coverage-node-*

    - name: Merge coverage reports
      shell: bash
      run: find ./coverage -name lcov.info -exec printf '-a %q\n' {} \; | xargs lcov -o ./lcov.info

    - name: Upload coverage report
      uses: coverallsapp/github-action@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        file: ./lcov.info
